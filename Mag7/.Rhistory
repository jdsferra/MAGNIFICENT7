runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
View(expmc)
View(expmc)
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/mag7refactor')
runApp('Desktop/NYCDSA/RWork/mag7refactor')
runApp('Desktop/NYCDSA/RWork/mag7refactor')
runApp('Desktop/NYCDSA/RWork/mag7refactor')
closingprices <- read.csv(file = "./closingprices20-24.csv", skip = 1)
closingprices <- read.csv(file = "./closingprices20-24.csv", skip = 1)
closingprices <- read.csv(file = "./closingprices20-24.csv", skip = 1)
closingprices$Date = gsub(" 16:00:00","",closingprices$Date)
closingprices$Date = as.Date(closingprices$Date, "%m/%d/%Y")
closingprices
closingprices <- read.csv(file = "./closingprices20-24.csv", skip = 1)
closingprices
closingprices <- read.csv(file = "./closingprices20-24.csv", skip = 1)
closingprices$Date = gsub(" 16:00:00","",closingprices$Date)
closingprices$Date = as.Date(closingprices$Date, "%m/%d/%Y")
closingprices
ggplot(closingprices, aes(Date, identity))
library(ggplot2)
library(tidyr)
# Sample data
data <- data.frame(
Date = as.Date(c("2020-01-02", "2020-01-03", "2020-01-06", "2020-01-07", "2020-01-08")),
AAPL = c(75.09, 74.36, 74.95, 74.60, 75.80),
AMZN = c(94.90, 93.75, 95.14, 95.34, 94.60),
GOOG = c(68.37, 68.03, 69.71, 69.67, 70.22),
META = c(209.78, 208.67, 212.60, 213.06, 215.22),
MSFT = c(160.62, 158.62, 159.03, 157.58, 160.09),
NVDA = c(59.98, 59.02, 59.27, 59.98, 60.10),
TSLA = c(28.68, 29.53, 30.10, 31.27, 32.81),
S.P500 = c(3257.85, 3234.85, 3246.28, 3237.18, 3253.05)
)
# Reshape data to long format
data_long <- pivot_longer(data, -Date, names_to = "Stock", values_to = "Price")
# Plot using ggplot2
ggplot(data_long, aes(x = Date, y = Price, color = Stock)) +
geom_line() +
labs(title = "Stock Prices Over Time",
x = "Date",
y = "Price") +
theme_minimal() +
theme(legend.position = "right")
library(ggplot2)
library(tidyr)
library(plotly)
# Sample data
data <- data.frame(
Date = as.Date(c("2020-01-02", "2020-01-03", "2020-01-06", "2020-01-07", "2020-01-08")),
AAPL = c(75.09, 74.36, 74.95, 74.60, 75.80),
AMZN = c(94.90, 93.75, 95.14, 95.34, 94.60),
GOOG = c(68.37, 68.03, 69.71, 69.67, 70.22),
META = c(209.78, 208.67, 212.60, 213.06, 215.22),
MSFT = c(160.62, 158.62, 159.03, 157.58, 160.09),
NVDA = c(59.98, 59.02, 59.27, 59.98, 60.10),
TSLA = c(28.68, 29.53, 30.10, 31.27, 32.81),
S.P500 = c(3257.85, 3234.85, 3246.28, 3237.18, 3253.05)
)
# Reshape data to long format
data_long <- pivot_longer(data, -Date, names_to = "Stock", values_to = "Price")
# Plot using ggplot2
x <- ggplot(data_long, aes(x = Date, y = Price, color = Stock, frame = Date)) +
geom_line() +
labs(title = "Stock Prices Over Time",
x = "Date",
y = "Price") +
theme_minimal() +
theme(legend.position = "right")
ggplotly(x)
data_long
library(ggplot2)
library(tidyr)
library(plotly)
# Sample data
data <- data.frame(
Date = as.Date(c("2020-01-02", "2020-01-03", "2020-01-06", "2020-01-07", "2020-01-08")),
AAPL = c(75.09, 74.36, 74.95, 74.60, 75.80),
AMZN = c(94.90, 93.75, 95.14, 95.34, 94.60),
GOOG = c(68.37, 68.03, 69.71, 69.67, 70.22),
META = c(209.78, 208.67, 212.60, 213.06, 215.22),
MSFT = c(160.62, 158.62, 159.03, 157.58, 160.09),
NVDA = c(59.98, 59.02, 59.27, 59.98, 60.10),
TSLA = c(28.68, 29.53, 30.10, 31.27, 32.81),
S.P500 = c(3257.85, 3234.85, 3246.28, 3237.18, 3253.05)
)
# Reshape data to long format
data_long <- pivot_longer(data, -Date, names_to = "Stock", values_to = "Price")
data_long
# Plot using ggplot2
x <- ggplot(data_long, aes(x = Date, y = Price, color = Stock, frame = Date)) +
geom_line() +
labs(title = "Stock Prices Over Time",
x = "Date",
y = "Price") +
theme_minimal() +
theme(legend.position = "right")
ggplotly(x)
# Plot using ggplot2
x <- ggplot() + geom_line(data = data$AAPL, aes(x = Date))
library(ggplot2)
library(tidyr)
library(plotly)
data <- data.frame(
Date = as.Date(c("2020-01-02", "2020-01-03", "2020-01-06", "2020-01-07", "2020-01-08")),
AAPL = c(75.09, 74.36, 74.95, 74.60, 75.80),
AMZN = c(94.90, 93.75, 95.14, 95.34, 94.60),
GOOG = c(68.37, 68.03, 69.71, 69.67, 70.22),
META = c(209.78, 208.67, 212.60, 213.06, 215.22),
MSFT = c(160.62, 158.62, 159.03, 157.58, 160.09),
NVDA = c(59.98, 59.02, 59.27, 59.98, 60.10),
TSLA = c(28.68, 29.53, 30.10, 31.27, 32.81),
S.P500 = c(3257.85, 3234.85, 3246.28, 3237.18, 3253.05)
)
# Reshape data to long format
data_long <- pivot_longer(data, -Date, names_to = "Stock", values_to = "Price")
# Plot using ggplot2
ggplot(data_long, aes(x = Date, y = Price, color = Stock)) +
geom_line() +
labs(title = "Stock Prices Over Time",
x = "Date",
y = "Price") +
theme_minimal() +
theme(legend.position = "right")
library(ggplot2)
library(tidyr)
library(plotly)
data <- data.frame(
Date = as.Date(c("2020-01-02", "2020-01-03", "2020-01-06", "2020-01-07", "2020-01-08")),
AAPL = c(75.09, 74.36, 74.95, 74.60, 75.80),
AMZN = c(94.90, 93.75, 95.14, 95.34, 94.60),
GOOG = c(68.37, 68.03, 69.71, 69.67, 70.22),
META = c(209.78, 208.67, 212.60, 213.06, 215.22),
MSFT = c(160.62, 158.62, 159.03, 157.58, 160.09),
NVDA = c(59.98, 59.02, 59.27, 59.98, 60.10),
TSLA = c(28.68, 29.53, 30.10, 31.27, 32.81),
S.P500 = c(3257.85, 3234.85, 3246.28, 3237.18, 3253.05)
)
# Reshape data to long format
data_long <- pivot_longer(data, -Date, names_to = "Stock", values_to = "Price")
# Create ggplot object
p <- ggplot(data_long, aes(x = Date, y = Price, color = Stock)) +
geom_line() +
labs(title = "Stock Prices Over Time",
x = "Date",
y = "Price") +
theme_minimal() +
theme(legend.position = "right")
# Convert ggplot object to plotly
p_plotly <- ggplotly(p)
# Add animation slider
p_plotly %>%
animation_slider(
currentvalue = list(prefix = "Date: "),
transition = 1000,
autorange = TRUE,
font = list(size = 12)
)
library(ggplot2)
library(tidyr)
library(plotly)
data <- data.frame(
Date = as.Date(c("2020-01-02", "2020-01-03", "2020-01-06", "2020-01-07", "2020-01-08")),
AAPL = c(75.09, 74.36, 74.95, 74.60, 75.80),
AMZN = c(94.90, 93.75, 95.14, 95.34, 94.60),
GOOG = c(68.37, 68.03, 69.71, 69.67, 70.22),
META = c(209.78, 208.67, 212.60, 213.06, 215.22),
MSFT = c(160.62, 158.62, 159.03, 157.58, 160.09),
NVDA = c(59.98, 59.02, 59.27, 59.98, 60.10),
TSLA = c(28.68, 29.53, 30.10, 31.27, 32.81),
S.P500 = c(3257.85, 3234.85, 3246.28, 3237.18, 3253.05)
)
# Reshape data to long format
data_long <- pivot_longer(data, -Date, names_to = "Stock", values_to = "Price")
# Create ggplot object
p <- ggplot(data_long, aes(x = Date, y = Price, color = Stock)) +
geom_line() +
labs(title = "Stock Prices Over Time",
x = "Date",
y = "Price") +
theme_minimal() +
theme(legend.position = "right")
# Convert ggplot object to plotly
p_plotly <- ggplotly(p)
# Add animation slider
p_plotly %>%
animation_slider(
currentvalue = list(prefix = "Date: "),
transition = 1000,
autorange = TRUE,
font = list(size = 12)
)
library(ggplot2)
library(tidyr)
library(plotly)
data <- data.frame(
Date = as.Date(c("2020-01-02", "2020-01-03", "2020-01-06", "2020-01-07", "2020-01-08")),
AAPL = c(75.09, 74.36, 74.95, 74.60, 75.80),
AMZN = c(94.90, 93.75, 95.14, 95.34, 94.60),
GOOG = c(68.37, 68.03, 69.71, 69.67, 70.22),
META = c(209.78, 208.67, 212.60, 213.06, 215.22),
MSFT = c(160.62, 158.62, 159.03, 157.58, 160.09),
NVDA = c(59.98, 59.02, 59.27, 59.98, 60.10),
TSLA = c(28.68, 29.53, 30.10, 31.27, 32.81),
S.P500 = c(3257.85, 3234.85, 3246.28, 3237.18, 3253.05)
)
# Reshape data to long format
data_long <- pivot_longer(data, -Date, names_to = "Stock", values_to = "Price")
# Create ggplot object
p <- ggplot(data_long, aes(x = Date, y = Price, color = Stock)) +
geom_line() +
labs(title = "Stock Prices Over Time",
x = "Date",
y = "Price") +
theme_minimal() +
theme(legend.position = "right")
# Convert ggplot object to plotly
p_plotly <- ggplotly(p)
# Create frames for animation
frames <- lapply(unique(data$Date), function(date) {
data_filtered <- data_long[data_long$Date == date, ]
frame_data <- list(
data = list(
x = ~Date,
y = ~Price,
color = ~Stock
),
traces = seq_along(unique(data_long$Stock)),
name = as.character(date)
)
for (stock in unique(data_long$Stock)) {
frame_data$data[[paste0("y", which(data_long$Stock == stock))]] <- data_filtered[data_filtered$Stock == stock, "Price"]
}
frame_data
})
library(ggplot2)
library(tidyr)
library(plotly)
data <- data.frame(
Date = as.Date(c("2020-01-02", "2020-01-03", "2020-01-06", "2020-01-07", "2020-01-08")),
AAPL = c(75.09, 74.36, 74.95, 74.60, 75.80),
AMZN = c(94.90, 93.75, 95.14, 95.34, 94.60),
GOOG = c(68.37, 68.03, 69.71, 69.67, 70.22),
META = c(209.78, 208.67, 212.60, 213.06, 215.22),
MSFT = c(160.62, 158.62, 159.03, 157.58, 160.09),
NVDA = c(59.98, 59.02, 59.27, 59.98, 60.10),
TSLA = c(28.68, 29.53, 30.10, 31.27, 32.81),
S.P500 = c(3257.85, 3234.85, 3246.28, 3237.18, 3253.05)
)
# Reshape data to long format
data_long <- pivot_longer(data, -Date, names_to = "Stock", values_to = "Price")
# Create ggplot object
p <- ggplot(data_long, aes(x = Date, y = Price, color = Stock)) +
geom_line() +
labs(title = "Stock Prices Over Time",
x = "Date",
y = "Price") +
theme_minimal() +
theme(legend.position = "right")
# Convert ggplot object to plotly
p_plotly <- ggplotly(p)
# Create frames for animation
frames <- lapply(unique(data$Date), function(date) {
data_filtered <- data_long[data_long$Date == date, ]
frame_data <- list(
data = list(
x = ~Date,
y = ~Price,
color = ~Stock
),
traces = unique(data_long$Stock),
name = as.character(date)
)
for (stock in unique(data_long$Stock)) {
frame_data$data[[paste0("y", which(data_long$Stock == stock))]] <- data_filtered[data_filtered$Stock == stock, "Price"]
}
frame_data
})
runApp('Desktop/NYCDSA/RWork/mag7refactor')
runApp('Desktop/NYCDSA/RWork/mag7refactor')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
shiny::runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
mc
mc <- read.csv(file = "./marketcap14-24 copy.csv")
mc <- mc %>% mutate('S&P493' = SP- rowSums(mc[2:8])) %>% relocate('S&P493', .before= 'SP') %>% mutate_if(is.numeric, round, digits = 2)
mc
mc %>% select(1:8)
just7 <- mc %>% select(1:8)
just7
just7 %>% pivot_longer(2:8, names_to='biz', values_to = 'marketcap')
mc <- read.csv(file = "./marketcap14-24 copy.csv")
mc <- mc %>% mutate('S&P493' = SP- rowSums(mc[2:8])) %>% relocate('S&P493', .before= 'SP') %>% mutate_if(is.numeric, round, digits = 2)
just7 <- mc %>% select(1:8)
just7 <- just7 %>% pivot_longer(2:8, names_to='biz', values_to = 'marketcap')
ggplot(just7, aes(x = YearEnd, y = marketcap, fill = biz)) + geom_col() + theme(axis.text.x = element_text(size = 10, angle = 45)) +
scale_x_discrete(name = 'Year', limits = 2014:2024) +
labs(title = "Mag7's Market Cap Breakdown", y = "Trillions USD", fill = '') #+
#scale_fill_manual(values = custom_colors)
library(RColorBrewer)
mc <- read.csv(file = "./marketcap14-24 copy.csv")
mc <- mc %>% mutate('S&P493' = SP- rowSums(mc[2:8])) %>% relocate('S&P493', .before= 'SP') %>% mutate_if(is.numeric, round, digits = 2)
just7 <- mc %>% select(1:8)
just7 <- just7 %>% pivot_longer(2:8, names_to='biz', values_to = 'marketcap')
ggplot(just7, aes(x = YearEnd, y = marketcap, fill = biz)) + geom_col() + theme(axis.text.x = element_text(size = 10, angle = 45)) +
scale_x_discrete(name = 'Year', limits = 2014:2024) +
labs(title = "Mag7's Market Cap Breakdown", y = "Trillions USD", fill = '') #+
scale_fill_manual(values = 'Blues')
ggplot(just7, aes(x = YearEnd, y = marketcap, fill = biz)) + geom_col() + theme(axis.text.x = element_text(size = 10, angle = 45)) +
scale_x_discrete(name = 'Year', limits = 2014:2024) +
labs(title = "Mag7's Market Cap Breakdown", y = "Trillions USD", fill = '') +
scale_fill_manual(values = 'Blues')
ggplot(just7, aes(x = YearEnd, y = marketcap, fill = biz)) + geom_col() + theme(axis.text.x = element_text(size = 10, angle = 45)) +
scale_x_discrete(name = 'Year', limits = 2014:2024) +
labs(title = "Mag7's Market Cap Breakdown", y = "Trillions USD", fill = '') +
scale_color_brewer(palette = "PuOr")
ggplot(just7, aes(x = YearEnd, y = marketcap, fill = biz)) + geom_col() + theme(axis.text.x = element_text(size = 10, angle = 45)) +
scale_x_discrete(name = 'Year', limits = 2014:2024) +
labs(title = "Mag7's Market Cap Breakdown", y = "Trillions USD", fill = '') +
scale_color_brewer(palette = "Blues")
library(RColorBrewer)
mc <- read.csv(file = "./marketcap14-24 copy.csv")
mc <- mc %>% mutate('S&P493' = SP- rowSums(mc[2:8])) %>% relocate('S&P493', .before= 'SP') %>% mutate_if(is.numeric, round, digits = 2)
just7 <- mc %>% select(1:8)
just7 <- just7 %>% pivot_longer(2:8, names_to='biz', values_to = 'marketcap')
ggplot(just7, aes(x = YearEnd, y = marketcap, fill = biz)) + geom_col() + theme(axis.text.x = element_text(size = 10, angle = 45)) +
scale_x_discrete(name = 'Year', limits = 2014:2024) +
labs(title = "Mag7's Market Cap Breakdown", y = "Trillions USD", fill = '') +
scale_fill_brewer(palette = "Blues")
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
library(RColorBrewer)
mc <- read.csv(file = "./marketcap14-24 copy.csv")
mc <- mc %>% mutate('S&P493' = SP- rowSums(mc[2:8])) %>% relocate('S&P493', .before= 'SP') %>% mutate_if(is.numeric, round, digits = 2)
just7 <- mc %>% select(1:8)
just7 <- just7 %>% pivot_longer(2:8, names_to='biz', values_to = 'marketcap')
ggplot(just7, aes(x = YearEnd, y = marketcap, fill = biz)) + geom_col() + theme(axis.text.x = element_text(size = 10, angle = 45, panel.background = element_rect(fill. = '#BFD5E3'))) +
scale_x_discrete(name = 'Year', limits = 2014:2024) +
labs(title = "Mag7's Market Cap Breakdown", y = "Trillions USD", fill = '') +
scale_fill_brewer(palette = "Blues")
library(RColorBrewer)
mc <- read.csv(file = "./marketcap14-24 copy.csv")
mc <- mc %>% mutate('S&P493' = SP- rowSums(mc[2:8])) %>% relocate('S&P493', .before= 'SP') %>% mutate_if(is.numeric, round, digits = 2)
just7 <- mc %>% select(1:8)
just7 <- just7 %>% pivot_longer(2:8, names_to='biz', values_to = 'marketcap')
ggplot(just7, aes(x = YearEnd, y = marketcap, fill = biz)) + geom_col() + theme(axis.text.x = element_text(size = 10, angle = 45, panel.background = element_rect(fill. = '#BFD5E3'))) +
scale_x_discrete(name = 'Year', limits = 2014:2024) +
labs(title = "Mag7's Market Cap Breakdown", y = "Trillions USD", fill = '') +
scale_fill_brewer(palette = "Blues")
library(RColorBrewer)
mc <- read.csv(file = "./marketcap14-24 copy.csv")
mc <- mc %>% mutate('S&P493' = SP- rowSums(mc[2:8])) %>% relocate('S&P493', .before= 'SP') %>% mutate_if(is.numeric, round, digits = 2)
just7 <- mc %>% select(1:8)
just7 <- just7 %>% pivot_longer(2:8, names_to='biz', values_to = 'marketcap')
ggplot(just7, aes(x = YearEnd, y = marketcap, fill = biz)) + geom_col() +
theme(axis.text.x = element_text(size = 10, angle = 45), panel.background = element_rect(fill. = '#BFD5E3')) +
scale_x_discrete(name = 'Year', limits = 2014:2024) +
labs(title = "Mag7's Market Cap Breakdown", y = "Trillions USD", fill = '') +
scale_fill_brewer(palette = "Blues")
library(RColorBrewer)
mc <- read.csv(file = "./marketcap14-24 copy.csv")
mc <- mc %>% mutate('S&P493' = SP- rowSums(mc[2:8])) %>% relocate('S&P493', .before= 'SP') %>% mutate_if(is.numeric, round, digits = 2)
just7 <- mc %>% select(1:8)
just7 <- just7 %>% pivot_longer(2:8, names_to='biz', values_to = 'marketcap')
ggplot(just7, aes(x = YearEnd, y = marketcap, fill = biz)) + geom_col() +
theme(axis.text.x = element_text(size = 10, angle = 45), panel.background = element_rect(fill = '#BFD5E3')) +
scale_x_discrete(name = 'Year', limits = 2014:2024) +
labs(title = "Mag7's Market Cap Breakdown", y = "Trillions USD", fill = '') +
scale_fill_brewer(palette = "Blues")
library(RColorBrewer)
mc <- read.csv(file = "./marketcap14-24 copy.csv")
mc <- mc %>% mutate('S&P493' = SP- rowSums(mc[2:8])) %>% relocate('S&P493', .before= 'SP') %>% mutate_if(is.numeric, round, digits = 2)
just7 <- mc %>% select(1:8)
just7 <- just7 %>% pivot_longer(2:8, names_to='biz', values_to = 'marketcap')
ggplot(just7, aes(x = YearEnd, y = marketcap, fill = biz)) + geom_col() +
theme(axis.text.x = element_text(size = 10, angle = 45), panel.background = element_rect(fill = '#636363')) +
scale_x_discrete(name = 'Year', limits = 2014:2024) +
labs(title = "Mag7's Market Cap Breakdown", y = "Trillions USD", fill = '') +
scale_fill_brewer(palette = "Blues")
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
library(RColorBrewer)
mc <- read.csv(file = "./marketcap14-24 copy.csv")
mc <- mc %>% mutate('S&P493' = SP- rowSums(mc[2:8])) %>% relocate('S&P493', .before= 'SP') %>% mutate_if(is.numeric, round, digits = 2)
just7 <- mc %>% select(1:8)
just7 <- just7 %>% pivot_longer(2:8, names_to='biz', values_to = 'marketcap')
ggplot(just7, aes(x = YearEnd, y = marketcap, fill = biz)) + geom_col() +
theme(axis.text.x = element_text(size = 10, angle = 45), panel.background = element_rect(fill = '#708090')) +
scale_x_discrete(name = 'Year', limits = 2014:2024) +
labs(title = "Mag7's Market Cap Breakdown", y = "Trillions USD", fill = '') +
scale_fill_brewer(palette = "Blues")
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
shiny::runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
shiny::runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
closingprices %>%
mutate(ym = format(date, '%Y-%m')) %>%
group_by(ym)
closingprices %>%
mutate(ym = format(Date, '%Y-%m')) %>%
group_by(ym)
closingprices %>%
mutate(ym = format(Date, '%Y-%m')) %>%
group_by(ym) %>% summarize(ym_sum = sum(2:9))
closingprices %>%
mutate(ym = format(Date, '%Y-%m')) %>%
group_by(ym) #%>% summarize(ym_sum = sum(2:9))
closingprices %>%
mutate(ym = format(Date, '%Y-%m')) %>%
group_by(ym) %>% summarize_if(is.numeric, mean, na.rm = TRUE)
closingprices %>%
mutate(ym = format(Date, '%Y-%m')) %>%
group_by(ym) #%>% summarize_if(is.numeric, mean, na.rm = TRUE)
closingprices %>%
mutate(ym = format(Date, '%Y-%m')) %>%
group_by(ym) %>% summarize_if(is.numeric, mean, na.rm = TRUE)
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
#mag7 global- import libraries, import data and do relevant preprocessing
library(shiny)
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
packageVersion("shiny")
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
runApp()
runApp()
runApp()
runApp('Desktop/NYCDSA/RWork/MAGNIFICENT7/Mag7')
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
